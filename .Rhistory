library(readr)
data <- read_csv("https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/who_complete.csv")
read_csv("https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/who_complete.csv")
data <- read_csv("https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Data/who_complete.csv")
read_xls("https://github.com/RobertASmith/Intro_to_R/blob/master/Data/snp.xlsx?raw=true")
read_xlsx("https://github.com/RobertASmith/Intro_to_R/blob/master/Data/snp.xlsx?raw=true")
help(read_xlsx)
??read_xlsx
read_xlsx("https://github.com/RobertASmith/Intro_to_R/blob/master/Data/snp.xlsx")
# load necessary pre-downloaded packages
library(readxl)
read_xlsx("https://github.com/RobertASmith/Intro_to_R/blob/master/Data/snp.xlsx")
read_xlsx("https://github.com/RobertASmith/Intro_to_R/blob/master/Data/snp.xlsx?raw=true")
read_csv("https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Data/who_complete.csv")
sp500 <- read_csv("https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Data/who_complete.csv")
sp500$`Annual Change`
sp500
sp500 <- read_csv("https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Data/snp.csv")
sp500$`Annual Change`
mean <- fitdist(data = sp500$`Annual Change`,
method = "mle",
distr = "norm")$`estimate`["mean"]
sd   <- fitdist(data = sp500$`Annual Change`,
method = "mle",
distr = "norm")$`estimate`["sd"]
library(fitdistrplus)
mean <- fitdist(data = sp500$`Annual Change`,
method = "mle",
distr = "norm")$`estimate`["mean"]
sd   <- fitdist(data = sp500$`Annual Change`,
method = "mle",
distr = "norm")$`estimate`["sd"]
mean
sd
2+2
a <- 2
b <- 2
a+b
help(log)
# base exp(1) is the default
log(x = 9,base = exp(1))
log(x=9, base = 3)
# load the readr package, if this is not installed then install it.
library(readr)
#use the function read_csv
data <- read_csv("https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Data/who_complete.csv")
# Loop printing 1 to 10
for(i in 1:10) { # for each value of i from 1 to 10.
print(i)       # print the value of i
}                # close the loop
# create an object of odds
odds <- c(1,3,5,7,9)
# Loop printing all the values in the odds vector.
for(i in odds) { # for each value of i in the odds vector.
print(i)       # print the value of i
}                # close the loop
#create an vector of empty data
ourdata <- vector(mode = "numeric",length = 10)
# Fill our vector with values
for(i in 1:length(ourdata)) { # for each value of i in our data object.
ourdata[i] <- i             # print the value of i
}                             # close the loop
print(ourdata)                # print the vector
#create an vector of empty data
v.val <- vector(mode = "numeric",length = 100)
# start with 1
v.val[1] <- 1
# Discount our value at 1.5% each year
for(i in 2:length(v.val)) {            # for each value of i in the odds object.
v.val[i] <- v.val[i-1]* (1/1.015)    # it takes the value of the previous year value 1/(1.015)
}                                      # close the loop
plot(v.val,type="l")                           # print the vector
v.val <- (1/1.015)^(1:100)
plot(v.val,type = "l")
#create an vector of empty data
m.ind <- matrix(data = NA,
nrow = 100,
ncol = 1000)
# everyone starts alive (1)
m.ind[1,] <- 1
# Each person has a probability of death of 0.1
for(i in 2:nrow(m.ind)) {
# value is 1 if alive in previous period and random number > 0.1
m.ind[i,] <- m.ind[i-1,] * runif( n = 1000, min = 0, max=1 ) > 0.1
}                                      # close the loop
plot(rowSums(m.ind),type="l")   # print the sums of the rows of the matrix (% alive)
library("imager")
library(ggplot2)
image <- load.image(file = "Images/FIRE.jpg")
plot(image, axes = F)
getwd()
library("imager")
library(ggplot2)
image <- load.image(file = "https://github.com/RobertASmith/Intro_to_R/blob/master/Images/FIRE.JPG")
plot(image, axes = F)
load.image(file = "https://github.com/RobertASmith/Intro_to_R/blob/master/Images/FIRE.JPG")
library("imager")
library(ggplot2)
image <- load.image(file = "https://github.com/RobertASmith/Intro_to_R/blob/master/Images/FIRE.jpeg")
plot(image, axes = F)
library("imager")
library(ggplot2)
image <- load.image(file = "https://github.com/RobertASmith/Intro_to_R/blob/master/Images/FIRE.JPG")
plot(image, axes = F)
library("imager")
library(ggplot2)
image <- load.image(file = "https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Images/Firepic.JPG")
plot(image, axes = F)
install.packages("image magick")
library(magick)
tiger <- image_read_svg('http://jeroen.github.io/images/tiger.svg', width = 350)
print(tiger)
library(magick)
install.packages("magick")
library(magick)
tiger <- image_read_svg('http://jeroen.github.io/images/tiger.svg', width = 350)
image_read_svg('http://jeroen.github.io/images/tiger.svg', width = 350)
image_read_svg('http://jeroen.github.io/images/tiger.svg', width = 350)
library(magick)
tiger <- image_read_svg(path = 'http://jeroen.github.io/images/tiger.svg',
width = 350)
image_read(path = 'http://jeroen.github.io/images/tiger.svg',
width = 350)
tiger <- image_read(path = 'http://jeroen.github.io/images/tiger.svg',width = 350)
tiger
image_read(path = 'http://jeroen.github.io/images/tiger.svg')
image_read(path = "https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Images/Firepic.JPG")
print(firepic)
library("imager")
library(ggplot2)
install.packages("magick")
library(magick)
firepic <- image_read(path = "https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Images/Firepic.JPG")
print(firepic)
#plot(image, axes = F)
install.packages("magick")
library("imager")
library(ggplot2)
library(magick)
firepic <- image_read(path = "https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Images/Firepic.JPG")
print(firepic)
#plot(image, axes = F)
library("imager")
library(ggplot2)
library(magick)
firepic <- image_read(path = "https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Images/Firepic.JPG")
print(firepic)
#plot(image, axes = F)
library("imager")
library(ggplot2)
library(magick)
firepic <- image_read(path = "https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Images/Firepic.JPG")
print(firepic)
plot(firepic, axes = F)
library("imager")
library(ggplot2)
library(magick)
firepic <- image_read(path = "https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Images/Firepic.JPG")
print(firepic)
plot(firepic)
library("imager")
library(ggplot2)
library(magick)
firepic <- image_read(path = "https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Images/Firepic.JPG")
print(firepic)
#plot(firepic)
#===
# FINANCIAL INDEPENDENCE RETIRE EARLY
#===
# clear the work environment
rm(list=ls())
# load necessary pre-downloaded packages
library(readxl)
library(fitdistrplus)
# Read in data from source, an excel file using data from https://www.macrotrends.net/2526/sp-500-historical-annual-returns
#sp500 <- as.data.frame(read_excel("Data/snp.xlsx", sheet = "Sheet1"))
sp500 <- read_csv("https://raw.githubusercontent.com/RobertASmith/Intro_to_R/master/Data/snp.csv")
earth <- image_read("https://jeroen.github.io/images/earth.gif") %>%
image_scale("200x") %>%
image_quantize(128)
length(earth)
earth
rev(earth) %>%
image_flip() %>%
image_annotate("meanwhile in Australia", size = 20, color = "white")
library(gapminder)
library(ggplot2)
image_graph(600, 340, res = 96)
img <- image_graph(600, 340, res = 96)
img
gapminder
gapminder$year
split
datalist <- split(gapminder, gapminder$year)
datalist
out <- lapply(datalist, function(data){
p <- ggplot(data, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
scale_size("population", limits = range(gapminder$pop)) + geom_point() + ylim(20, 90) +
scale_x_log10(limits = range(gapminder$gdpPercap)) + ggtitle(data$year) + theme_classic()
print(p)
})
dev.off()
animation <- image_animate(img, fps = 2)
animation
print(animation)
datalist
ggplot(datalist$`1952`,aes(gdpPercap, lifeExp, size = pop, color = continent)) +
scale_size("population", limits = range(gapminder$pop)) +
geom_point() +
ylim(20, 90) +
scale_x_log10(limits = range(gapminder$gdpPercap)) +
ggtitle(data$year) +
theme_classic())
ggplot(datalist$`1952`,aes(gdpPercap, lifeExp, size = pop, color = continent)) +
scale_size("population", limits = range(gapminder$pop)) +
geom_point() +
ylim(20, 90) +
scale_x_log10(limits = range(gapminder$gdpPercap)) +
ggtitle(data$year) +
theme_classic()
datalist$`1952`
datalist$`1952`
gapminder$gdpPercap
ggplot(datalist$`1952`,aes(gdpPercap, lifeExp, size = pop, color = continent)) +
scale_size(name = "population", limits = range(gapminder$pop)) +
geom_point() +
ylim(20, 90) +
scale_x_log10(limits = range(gapminder$gdpPercap)) +
ggtitle(datalist$year) +
theme_classic()
p <- ggplot(datalist$`1952`,aes(gdpPercap, lifeExp, size = pop, color = continent)) +
scale_size(name = "population", limits = range(gapminder$pop)) +
geom_point() +
ylim(20, 90) +
scale_x_log10(limits = range(gapminder$gdpPercap)) +
ggtitle(datalist$year) +
theme_classic()
print(p)
p <- ggplot(datalist$`1972`,aes(gdpPercap, lifeExp, size = pop, color = continent)) +
scale_size(name = "population", limits = range(gapminder$pop)) +
geom_point() +
ylim(20, 90) +
scale_x_log10(limits = range(gapminder$gdpPercap)) +
ggtitle(datalist$year) +
theme_classic()
print(p)
rm(list = ls())
library(gapminder)
library(ggplot2)
img <- image_graph(width = 600,height = 400,res = 100)
img
datalist <- split(gapminder,gapminder$year)
datalist
out <- lapply(X = datalist,FUN = function(data){
p <- ggplot(datalist$`1972`,aes(gdpPercap, lifeExp, size = pop, color = continent)) +
scale_size(name = "population", limits = range(gapminder$pop)) +
geom_point() +
ylim(20, 90) +
scale_x_log10(limits = range(gapminder$gdpPercap)) +
ggtitle(datalist$year) +
theme_classic()
print(p)
})
out
dev.off()
animation <- image_animate(image = img, loop = 2,fps = 1)
print(animation)
animation
animation <- image_animate(image = img, loop = 2,fps = 2)
print(animation)
rm(list = ls())
library(gapminder)
library(ggplot2)
img <- image_graph(width = 600,height = 400,res = 100)
datalist <- split(gapminder,gapminder$year)
out <- lapply(X = datalist,FUN = function(data){
p <- ggplot(data, aes(gdpPercap,
lifeExp,
size = pop,
color = continent)) +
scale_size(name = "population",
limits = range(gapminder$pop)) +
geom_point() +
ylim(20, 90) +
scale_x_log10(limits = range(gapminder$gdpPercap)) +
ggtitle(data$year) +
theme_classic()
print(p)
})
dev.off()
animation <- image_animate(image = img, loop = 2,fps = 2)
print(animation)
img
image_graph(width = 600,height = 400,res = 100)
animation <- image_animate(image = img, loop = 2,fps = 2)
print(animation)
out
rm(list = ls())
library(gapminder)
library(ggplot2)
img <- image_graph(width = 600,height = 400,res = 100)
datalist <- split(gapminder,gapminder$year)
out <- lapply(X = datalist,FUN = function(data){
p <- ggplot(data, aes(gdpPercap,
lifeExp,
size = pop,
color = continent)) +
scale_size(name = "population",
limits = range(gapminder$pop)) +
geom_point() +
ylim(20, 90) +
scale_x_log10(limits = range(gapminder$gdpPercap)) +
ggtitle(data$year) +
theme_classic()
print(p)
})
dev.off()
animation <- image_animate(image = img, loop = 2,fps = 2)
image_write(image = animation, path = "https://github.com/RobertASmith/Intro_to_R/Images/gapminder.gif")
image_write(image = animation, path = "C:\Users\Robert\Desktop\Rcourse\Intro_to_R\Images\gapminder.gif")
image_write(image = animation, path = "C:/Users/Robert/Desktop/Rcourse/Intro_to_R/Images/gapminder.gif")
